#!/bin/bash

# program echos a csv-like file with predefined columns from website below
# uses pipe as delimiter

data="$(curl -s https://news.ycombinator.com/?p=$1)";

# header line
echo "rank|upvotes|username|timestampUTC|title|url"; 

buffer="";
flag=0;
while read line ; do
	# separate each post each as 1 big line
	if [[ $line == *"<tr class='athing' id="* ]] || [[ $line == "</html>" ]] ; then
		# buffer contains 1 post, now find important contents and put them into the csv
		if [ $flag -eq 1 ] ; then	
			rank=$(echo $buffer | grep -oE 'class="rank">[0-9]+' | cut -d '>' -f2);
			upvote=$(echo $buffer | grep -oE 'id="score_[0-9]*">[0-9]+' | cut -d '>' -f2);
			username=$(echo $buffer | grep -oE 'user\?id=[^"]+"' | cut -d '=' -f2 |  sed 's/.$//');
			timestamp=$(echo $buffer | grep -oE 'age" title="[^".]*' | cut -d '=' -f2 | cut -c2-);
			title=$(echo $buffer | grep -oE 'class="titleline"><[^<]*<' | cut -d '>' -f3 | sed 's/.$//');
			url=$(echo $buffer | grep -oE 'class="titleline"[^"]*"[^"]*' | cut -d '"' -f4);
			# case that link isn't complete because it is on HN site (makes link complete)
			if [[ $url == "item?id="* ]] ; then
				temp_url=$url;
				url="https://news.ycombinator.com/$temp_url";
			fi
			echo "$rank|$upvote|$username|$timestamp|$title|$url";
		fi
		# reset buffer to take in new post block
		flag=1;
		buffer=""; 
	fi 
	buffer="$buffer$line";
done <<< $data 

